function createBar(id) { var svg = d3.select("body").select("#" + id).append("svg").attr("width", comData.width * comData.scale).attr("height", comData.height * comData.scale); var g = svg.append("g").style("cursor", "default").attr("transform", "scale(0.5)"); var data = createChartTitle(g); var gQuar = data[0]; var gAnnual = data[1]; var gTxtAxis = createChartXLine(g); var gContent = g.append("g").attr("font-size", 12).attr("fill", "gray"); changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(3), comData.annualText, gTxtAxis, gContent); var bar = changeBar(yLine(3), comData.annualValue, yScale(d3.max(comData.annualScale)), gContent, g); $("#bar").find("g:eq(2)").attr("id", "bar3"); bar.select("#bar3").select("rect").attr("fill", "#0072C5"); gQuar.on("click", function () { changeBarCommon(gQuar, gAnnual, comData.quarterlyScale, yLine(5), comData.quarterlyText, gTxtAxis, gContent); var bar = changeBar(yLine(5), comData.quarterlyValue, yScale(d3.max(comData.quarterlyScale)), gContent, g); $("#bar").find("g:eq(4)").attr("id", "bar5"); bar.select("#bar5").select("rect").attr("fill", "#0072C5") }); gAnnual.on("click", function () { changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(3), comData.annualText, gTxtAxis, gContent); var bar = changeBar(yLine(3), comData.annualValue, yScale(d3.max(comData.annualScale)), gContent, g); $("#bar").find("g:eq(2)").attr("id", "bar3"); bar.select("#bar3").select("rect").attr("fill", "#0072C5") }) } function createBarVersus(id) { var svg = d3.select("body").select("#" + id).append("svg").attr("width", comData.width * comData.scale).attr("height", comData.height * comData.scale); var g = svg.append("g").style("cursor", "default").attr("transform", "scale(0.5)"); var data = createChartTitle(g); var gQuar = data[0]; var gAnnual = data[1]; var gTxtAxis = createChartXLine(g); var gContent = g.append("g").attr("font-size", 12).attr("fill", "gray"); changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(6), comData.annualText, gTxtAxis, gContent); var bar = changeBar(yLine(6), comData.annualValue, yScale(d3.max(comData.annualScale)), gContent, g); drawBarVersus(bar, comData.annualValue); createRect(g, 0, comData.height - 28, comData.width, 28, "#F0F0F0"); createText(g, 66, comData.height - 15, "Revenue", 13, "black").attr("font-weight", "bold"); createText(g, 220, comData.height - 15, "Operating Income", 13, "black").attr("font-weight", "bold"); gQuar.on("click", function () { changeBarCommon(gQuar, gAnnual, comData.quarterlyScale, yLine(6), comData.quarterlyText, gTxtAxis, gContent); var bar = changeBar(yLine(6), comData.quarterlyValue, yScale(d3.max(comData.quarterlyScale)), gContent, g); drawBarVersus(bar, comData.quarterlyValue) }); gAnnual.on("click", function () { changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(6), comData.annualText, gTxtAxis, gContent); var bar = changeBar(yLine(6), comData.annualValue, yScale(d3.max(comData.annualScale)), gContent, g); drawBarVersus(bar, comData.annualValue) }) } function drawBarVersus(bar, dataSet) {
    $("#bar").find("g:eq(1)").attr("id", "gBar2"); $("#bar").find("g:eq(4)").attr("id", "gBar5"); bar.select("#gBar2").select("rect").attr("fill", "#0072C5"); bar.select("#gBar5").select("rect").attr("fill", "#0072C5"); $("#bar").find("g:eq(2)").attr("id", "gBar3"); var gTarget = bar.select("#gBar3"); var x = gTarget.select("rect").attr("x") - yLine(6).xText + 3; gTarget.select("rect").remove(); gTarget.select("text").remove(); var flag = ((dataSet[1] - dataSet[0]) > 0) ? 1 : -1; var scale = parseInt(parseFloat(Math.abs((dataSet[1] - dataSet[0])) / dataSet[0]).toFixed(2) * 100); var path = gTarget.append("path").attr("transform", "translate(" + x + ",100) scale(1.3)").attr("fill", "#339900"); var text = gTarget.append("text").attr("x", x + 12).attr("y", 130).attr("font-weight", "bold").attr("font-size", "14").attr("fill", "white").text(scale.toString() + "%"); if (flag == 1) { path.attr("d", "M20 0 L0 18 L6 18 L6 36 L34 36 L34 18 L40 18 Z").attr("fill", "#339900") } else { path.attr("d", "M6 0 L6 18 L0 18 L20 36 L40 18 L34 18 L34 0 Z").attr("fill", "#E81123") } $("#bar").find("g:eq(5)").attr("id", "gBar6"); var gTarget1 = bar.select("#gBar6"); var x1 = gTarget1.select("rect").attr("x") - yLine(6).xText + 3; gTarget1.select("rect").remove(); gTarget1.select("text").remove(); flag = ((dataSet[4] - dataSet[3]) > 0) ? 1 : -1; var scale1 = parseInt(parseFloat(Math.abs((dataSet[4] - dataSet[3])) / dataSet[3]).toFixed(2) * 100); var path1 = gTarget1.append("path").attr("transform", "translate(" + x1 + ",170) scale(1.3)"); text = gTarget1.append("text").attr("x", x1 + 12).attr("y", 200).attr("font-weight", "bold").attr("font-size", "14").attr("fill", "white").text(scale1.toString() + "%"); if (flag == 1) { path1.attr("d", "M20 0 L0 18 L6 18 L6 36 L34 36 L34 18 L40 18 Z").attr("fill", "#339900") } else { path1.attr("d", "M6 0 L6 18 L0 18 L20 36 L40 18 L34 18 L34 0 Z").attr("fill", "#E81123") } gTarget.select("path").transition().duration(1000).ease("linear").delay(1000).attr("transform", "translate(" + x + ",90) scale(1.3)").transition().duration(1000).ease("linear").attr("transform", "translate(" + x + ",100) scale(1.3)").transition().duration(1000).ease("linear").attr("transform", "translate(" + x + ",90) scale(1.3)").transition().duration(1000).ease("linear").attr("transform", "translate(" + x + ",100) scale(1.3)");
    gTarget.select("text").transition().duration(1000).ease("linear").delay(1000).attr("y", 120).transition().duration(1000).ease("linear").attr("y", 130).transition().duration(1000).ease("linear").attr("y", 120).transition().duration(1000).ease("linear").attr("y", 130); gTarget1.select("path").transition().duration(1000).ease("linear").delay(1000).attr("transform", "translate(" + x1 + ",160) scale(1.3)").transition().duration(1000).ease("linear").attr("transform", "translate(" + x1 + ",170) scale(1.3)").transition().duration(1000).ease("linear").attr("transform", "translate(" + x1 + ",160) scale(1.3)").transition().duration(1000).ease("linear").attr("transform", "translate(" + x1 + ",170) scale(1.3)"); gTarget1.select("text").transition().duration(1000).ease("linear").delay(1000).attr("y", 190).transition().duration(1000).ease("linear").attr("y", 200).transition().duration(1000).ease("linear").attr("y", 190).transition().duration(1000).ease("linear").attr("y", 200)
} function createBarDouble(id) { var svg = d3.select("body").select("#" + id).append("svg").attr("width", comData.width * comData.scale).attr("height", comData.height * comData.scale); var g = svg.append("g").style("cursor", "default").attr("transform", "scale(0.5)"); var data = createChartTitle(g); var gQuar = data[0]; var gAnnual = data[1]; var gTxtAxis = createChartXLine(g); var gContent = g.append("g").attr("font-size", 12).attr("fill", "gray"); changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(12), comData.annualText, gTxtAxis, gContent, 9, 250, 6); var n = d3.max(comData.annualScale) - d3.min(comData.annualScale); drawDoubleBar(comData.annualScale, yLine(12), comData.annualValue, yScale(n), gContent, g); createRect(g, 0, comData.height - 50, comData.width, 50, "#F0F0F0"); var gfoot = g.append("g").attr("font-size", 9).attr("fill", "gray"); addFootTxt(gfoot); gQuar.on("click", function () { changeBarCommon(gQuar, gAnnual, comData.quarterlyScale, yLine(12), comData.quarterlyText, gTxtAxis, gContent, 9, 250, 6); var num = d3.max(comData.quarterlyScale) - d3.min(comData.quarterlyScale); drawDoubleBar(comData.quarterlyScale, yLine(12), comData.quarterlyValue, yScale(num), gContent, g) }); gAnnual.on("click", function () { changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(12), comData.annualText, gTxtAxis, gContent, 9, 250, 6); var num = d3.max(comData.annualScale) - d3.min(comData.annualScale); drawDoubleBar(comData.annualScale, yLine(12), comData.annualValue, yScale(num), gContent, g) }) } function addFootTxt(gfoot) { var set1 = ["Devices", "Computing", "Phone", "Devices", "Commercial", "Commercial"]; var xline1 = [65, 114, 180, 235, 285, 342]; var set2 = ["and", "and", "and", "Licensing", "Other"]; var xline2 = [70, 126, 240, 290, 350]; var set3 = ["Consumer", "Gaming", "Consumer"]; var xline3 = [60, 120, 230]; var set4 = ["Hardware", "Other"]; var xline4 = [116, 238]; var g1 = gfoot.append("g"); g1.selectAll("text").data(set1).enter().append("text").attr("y", 280).text(function (d) { return d }); g1.selectAll("text").data(xline1).attr("x", function (d) { return d }); var g2 = gfoot.append("g"); g2.selectAll("text").data(set2).enter().append("text").attr("y", 292).text(function (d) { return d }); g2.selectAll("text").data(xline2).attr("x", function (d) { return d }); var g3 = gfoot.append("g"); g3.selectAll("text").data(set3).enter().append("text").attr("y", 304).text(function (d) { return d }); g3.selectAll("text").data(xline3).attr("x", function (d) { return d }); var g4 = gfoot.append("g"); g4.selectAll("text").data(set4).enter().append("text").attr("y", 316).text(function (d) { return d }); g4.selectAll("text").data(xline4).attr("x", function (d) { return d }) } function drawDoubleBar(arrayValue, yLine, barSet, yScale, gContent, g) {
    var index = arrayValue.indexOf(0); var bar = gContent.append("g"); var gBars = bar.selectAll("g").data(yLine.data()).enter().append("g"); gBars.data(yLine.data()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("y", xLine().data()[index]).attr("width", 24).attr("fill", "#00b193").attr("height", 0); gBars.data(yLine.bardouble()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("y", xLine().data()[index]).attr("width", 24).attr("fill", "#0072C5").attr("height", 0); bar.selectAll("rect").data(barSet).transition().duration(1000).attr("y", function (d, i) { if (d < 0) { return xLine().data()[index] } else { return xLine().data()[index] - yScale(d) } }).attr("height", function (d, i) { return Math.abs(yScale(d)) }); gBars.data(yLine.data()).append("text").attr("x", function (d, i) { return d + yLine.xText }).attr("y", 0).attr("fill", "gray").attr("class", "txtbar"); gBars.data(yLine.bardouble()).append("text").attr("x", function (d, i) { return d + yLine.xText }).attr("y", 0).attr("fill", "gray").attr("class", "txtbar"); bar.selectAll("text").data(barSet).attr("font-size", 11).attr("display", "none").attr("y", function (d, i) { if (d < 0) { return xLine().data()[index] + 12 - yScale(d) } return xLine().data()[index] - 4 - yScale(d) }).transition().duration(500).delay(1000).attr("display", "block").text(function (d, i) { return d.toFixed(1) }); var showRect = createRect(g, 0, 0, 58, 17, "black").attr("display", "none").attr("rx", 10).attr("ry", 10); var showText = createText(g, 5, 13, "", 11, "white").attr("font-weight", "bold").attr("display", "none");
    gBars.on("mouseover", function () { var x = 0; var y = 0; var txt; d3.select(this).selectAll("rect").each(function () { var tarRect = d3.select(this); if (tarRect.attr("fill") == "#00b193") { tarRect.attr("fill", "#008e76") } else { if (tarRect.attr("fill") == "#0072C5") { tarRect.attr("fill", "#005B9E") } } var tempX = tarRect.attr("x"); var tempY = tarRect.attr("y"); if (x == 0) { x = parseInt(tempX) } else { if (parseInt(tempX) < x) { x = parseInt(tempX) } } if (y == 0) { y = parseInt(tempY) } else { if (parseInt(tempY) < y) { y = parseInt(tempY) } } }); d3.select(this).selectAll("text").each(function () { if (txt === undefined) { txt = d3.select(this).text() } else { txt = txt + "|" + d3.select(this).text() } d3.select(this).attr("display", "none") }); showRect.attr("display", "block").attr("x", x - 5).attr("y", y - 22); showText.attr("display", "block").attr("x", parseInt(x)).attr("y", y - 9).text(txt) }).on("mouseout", function () { d3.select(this).selectAll("rect").each(function () { var tarRect = d3.select(this); if (tarRect.attr("fill") == "#008e76") { tarRect.attr("fill", "#00b193") } if (tarRect.attr("fill") == "#005B9E") { tarRect.attr("fill", "#0072C5") } }); d3.select(this).selectAll("text").attr("display", "block"); showRect.attr("display", "none"); showText.attr("display", "none") }); return bar
} function createBarSegment(id) { var svg = d3.select("body").select("#" + id).append("svg").attr("width", comData.width * comData.scale).attr("height", comData.height * comData.scale); var g = svg.append("g").style("cursor", "default").attr("transform", "scale(0.5)"); var data = createChartTitle(g); var gQuar = data[0]; var gAnnual = data[1]; var gTxtAxis = createChartXLine(g); var gTxtAxis1 = g.append("g").attr("font-size", 13).attr("fill", "gray").attr("font-weight", "bold"); gTxtAxis1.selectAll("text").data(xLine().data()).enter().append("text").attr("x", 360).attr("y", function (d, i) { return d - xLine().yText }); gTxtAxis1.selectAll("text").data(comData.annualScale1).text(function (d, i) { return "$" + d.toFixed(2) }); var gContent = g.append("g").attr("font-size", 12).attr("fill", "gray"); changeBarCommon(gQuar, gAnnual, comData.quarterlyScale, yLine(10), comData.quarterlyText, gTxtAxis, gContent, 13, 300); var gCheck = g.append("g"); var check1 = gCheck.append("g"); createRect(check1, 24, 313, 16, 16, "white").attr("stroke", "black"); createRect(check1, 27, 316, 10, 10, "gray").attr("class", "check"); createCircle(check1, 55, 321, 7, "#FFD800", "#FFD800", 1); createLine(check1, 61, 321, 92, 321, "#FFD800", 6); createText(check1, 105, 324, "Cash Dividends Deciared Per Share", 10, "gray"); var check2 = gCheck.append("g"); createRect(check2, 24, 338, 16, 16, "white").attr("stroke", "black"); createRect(check2, 27, 341, 10, 10, "gray").attr("class", "check"); createRect(check2, 48, 338, 44, 16, "#00B193"); createText(check2, 105, 349, "Total Dividends (Accrual Basis)", 10, "gray"); var check3 = gCheck.append("g"); createRect(check3, 24, 363, 16, 16, "white").attr("stroke", "black"); createRect(check3, 27, 366, 10, 10, "gray").attr("class", "check"); createRect(check3, 48, 363, 44, 16, "#0072C5"); createText(check3, 105, 374, "Share Buyback (Accrual Basis)", 10, "gray"); createText(gCheck, 60, 395, "refer to right-hand scale", 10, "gray"); drawBarAndEnd(yLine(10), comData.quarterlyValue1, comData.quarterlyValue, comData.quarterlyValue2, yScale(d3.max(comData.quarterlyScale)), yScale(d3.max(comData.quarterlyScale1)), gContent, g, gCheck); gQuar.on("click", function () { changeBarCommon(gQuar, gAnnual, comData.quarterlyScale, yLine(10), comData.quarterlyText, gTxtAxis, gContent, 13, 300); drawBarAndEnd(yLine(10), comData.quarterlyValue1, comData.quarterlyValue, comData.quarterlyValue2, yScale(d3.max(comData.quarterlyScale)), yScale(d3.max(comData.quarterlyScale1)), gContent, g, gCheck) }); gAnnual.on("click", function () { changeBarCommon(gAnnual, gQuar, comData.annualScale, yLine(2), comData.annualText, gTxtAxis, gContent, 13, 300); drawBarAndEnd(yLine(2), comData.annualValue1, comData.annualValue, comData.annualValue2, yScale(d3.max(comData.annualScale)), yScale(d3.max(comData.annualScale1)), gContent, g, gCheck) }) } function drawBarAndEnd(yLine, set, set1, set2, yScale, yScale1, gContent, g, gCheck) { var bar = gContent.append("g"); var flag = 1; var value = set; var value1 = set1; var arry = ""; gCheck.selectAll(".check").each(function () { arry = arry + d3.select(this).attr("fill") + "," }); arry = arry.substring(0, arry.length - 1); arry = arry.split(","); if (arry[0] == "white") { flag = 0 } if (arry[1] == "white") { value1 = null } if (arry[2] == "white") { value = null } drawSegmentBar(yLine, value, value1, set2, yScale, yScale1, bar, g, flag); gCheck.selectAll("g").each(function () { d3.select(this).on("click", function () { var flag = 1; var value = set; var value1 = set1; var tarRect = d3.select(this).select(".check"); if (tarRect.attr("fill") == "white") { tarRect.attr("fill", "gray") } else { tarRect.attr("fill", "white") } var arry = ""; gCheck.selectAll(".check").each(function () { arry = arry + d3.select(this).attr("fill") + "," }); arry = arry.substring(0, arry.length - 1); arry = arry.split(","); if (arry[0] == "white") { flag = 0 } if (arry[1] == "white") { value1 = null } if (arry[2] == "white") { value = null } drawSegmentBar(yLine, value, value1, set2, yScale, yScale1, bar, g, flag) }) }); return bar } function drawSegmentBar(yLine, set, set1, set2, yScale, yScale1, bar, g, flag) {
    bar.selectAll("g").remove(); var gBars = bar.selectAll("g").data(yLine.data()).enter().append("g");
    var delay = 0; if (set != null && set1 != null) { delay = 1600; var rect = gBars.data(yLine.data()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("y", d3.max(xLine().data())).attr("width", 35).attr("fill", "#0072C5").attr("height", 0); rect.data(set).transition().duration(800).ease("linear").attr("y", function (d, i) { return d3.max(xLine().data()) - yScale(d) }).attr("height", function (d, i) { return Math.abs(yScale(d)).toFixed(2) }).attr("text", function (d) { return d }); var rect1 = gBars.data(yLine.data()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("width", 35).attr("fill", "#00b193").attr("height", 0).attr("y", function (d, i) { return d3.max(xLine().data()) - yScale(set[i]) }); rect1.data(set1).transition().duration(800).ease("linear").delay(800).attr("y", function (d, i) { return d3.max(xLine().data()) - yScale(set[i]) - yScale(d) }).attr("height", function (d, i) { return Math.abs(yScale(d)).toFixed(2) }).attr("text", function (d) { return d }) } else { if (set != null) { delay = 800; var rect = gBars.data(yLine.data()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("y", d3.max(xLine().data())).attr("width", 35).attr("fill", "#0072C5").attr("height", 0); rect.data(set).transition().duration(800).ease("linear").attr("y", function (d, i) { return d3.max(xLine().data()) - yScale(d) }).attr("height", function (d, i) { return Math.abs(yScale(d)).toFixed(2) }).attr("text", function (d) { return d }) } else { if (set1 != null) { delay = 800; var rect1 = gBars.data(yLine.data()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("width", 35).attr("fill", "#00b193").attr("height", 0).attr("y", function (d, i) { return d3.max(xLine().data()) }); rect1.data(set1).transition().duration(800).ease("linear").attr("y", function (d, i) { return d3.max(xLine().data()) - yScale(d) }).attr("height", function (d, i) { return Math.abs(yScale(d)).toFixed(2) }).attr("text", function (d) { return d }) } else { delay = 0 } } } var showRect = createRect(g, 0, 0, 50, 20, "black").attr("display", "none").attr("rx", 10).attr("ry", 10); var showText = createText(g, 5, 14, "", 12, "white").attr("font-weight", "bold").attr("display", "none"); if (flag) {
        var startData = []; var lineData = []; for (var i = 0; i < yLine.data().length; i++) { var x = yLine.data()[i] + yLine.xText + 18; startData[i] = { "x": x, "y": d3.max(xLine().data()) }; lineData[i] = { "x": x, "y": d3.max(xLine().data()) - yScale1(set2[i]) } } var data1 = []; var data2 = []; var data3 = []; var data4 = []; var data5 = []; for (var i = 0; i < startData.length; i++) { data1[i] = { "x": startData[i].x, "y": startData[i].y }; data2[i] = { "x": startData[i].x, "y": startData[i].y }; data3[i] = { "x": startData[i].x, "y": startData[i].y }; data4[i] = { "x": startData[i].x, "y": startData[i].y }; data5[i] = { "x": startData[i].x, "y": startData[i].y }; if (i == 0) { data1[i] = { "x": startData[i].x, "y": startData[i].y - 20 }; data2[i] = { "x": startData[i].x, "y": startData[i].y - 40 }; data3[i] = { "x": startData[i].x, "y": startData[i].y - 60 }; data4[i] = { "x": startData[i].x, "y": startData[i].y - 80 }; data5[i] = { "x": startData[i].x, "y": startData[i].y - 100 } } else { if (i == 1) { data2[i] = { "x": startData[i].x, "y": startData[i].y - 20 }; data3[i] = { "x": startData[i].x, "y": startData[i].y - 40 }; data4[i] = { "x": startData[i].x, "y": startData[i].y - 60 }; data5[i] = { "x": startData[i].x, "y": startData[i].y - 80 } } else { if (i == 2) { data3[i] = { "x": startData[i].x, "y": startData[i].y - 20 }; data4[i] = { "x": startData[i].x, "y": startData[i].y - 40 }; data5[i] = { "x": startData[i].x, "y": startData[i].y - 60 } } else { if (i == 3) { data4[i] = { "x": startData[i].x, "y": startData[i].y - 20 }; data5[i] = { "x": startData[i].x, "y": startData[i].y - 40 } } else { if (i == 4) { data5[i] = { "x": startData[i].x, "y": startData[i].y - 20 } } } } } } } var lineFunction = d3.svg.line().x(function (d) { return d.x }).y(function (d) { return d.y }).interpolate("linear"); var gPath = bar.append("g"); gPath.append("path").attr("stroke", "#FFD800").attr("stroke-width", 6).attr("fill", "none").attr("d", lineFunction(startData)).transition().duration(300).delay(delay).attr("d", lineFunction(data1)).transition().duration(300).attr("d", lineFunction(data2)).transition().duration(300).attr("d", lineFunction(data3)).transition().duration(200).attr("d", lineFunction(data4)).transition().duration(300).attr("d", lineFunction(data5)).transition().duration(600).attr("d", lineFunction(lineData)); var circle = gPath.selectAll("circle").data(startData).enter().append("circle").attr("cx", function (d) { return d.x }).attr("cy", function (d) { return d.y }).attr("r", 7).attr("fill", "#FFD800").attr("stroke", "#FFD800").attr("stroke-width", 1); circle.data(data1).transition().duration(300).delay(delay).attr("cy", function (d) { return d.y }); circle.data(data2).transition().duration(300).delay(delay + 300).attr("cy", function (d) { return d.y }); circle.data(data3).transition().duration(300).delay(delay + 600).attr("cy", function (d) { return d.y }); circle.data(data4).transition().duration(200).delay(delay + 900).attr("cy", function (d) { return d.y }); circle.data(data5).transition().duration(300).delay(delay + 1100).attr("cy", function (d) { return d.y }); circle.data(lineData).transition().duration(600).delay(delay + 1400).attr("cy", function (d) { return d.y }); circle.data(set2).attr("text", function (d) { return d }); circle.on("mouseover", function () {
            var x = d3.select(this).attr("cx") - 25;
            var y = d3.select(this).attr("cy") - 30; var text = d3.select(this).attr("text"); showRect.attr("display", "block").attr("x", x).attr("y", y); showText.attr("display", "block").attr("x", parseInt(x) + 5).attr("y", parseInt(y) + 14).text("$" + parseFloat(text).toFixed(3))
        }).on("mouseout", function () { showRect.attr("display", "none"); showText.attr("display", "none") })
    } gBars.selectAll("rect").each(function () { d3.select(this).on("mouseover", function () { d3.select(this).attr("cursor", "pointer"); if (d3.select(this).attr("fill") == "#00b193") { d3.select(this).attr("fill", "#008e76") } else { d3.select(this).attr("fill", "#005b9e") } }).on("mouseout", function () { if (d3.select(this).attr("fill") == "#008e76") { d3.select(this).attr("fill", "#00b193") } else { d3.select(this).attr("fill", "#0072c5") } showRect.attr("display", "none"); showText.attr("display", "none") }).on("mousemove", function () { var x = parseInt(d3.select(this).attr("x")) + 30; var y = d3.mouse(this)[1]; showRect.attr("display", "block").attr("x", x).attr("y", y); showText.attr("display", "block").attr("x", parseInt(x) + 5).attr("y", parseInt(y) + 14).text("$" + parseFloat($(this).attr("text")).toFixed(3)) }) })
} function createPie(id) {
    var svg = d3.select("body").select("#" + id).append("svg").attr("width", comData.width * comData.scale).attr("height", comData.height * comData.scale); var g = svg.append("g").style("cursor", "default").attr("transform", "scale(0.5)"); var data = createChartTitle(g); var gQuar = data[0]; var gAnnual = data[1]; createRect(g, 0, comData.titleHeight + comData.barHeight, comData.width, comData.height - comData.titleHeight - comData.barHeight, "white"); var shadow = createRect(g, 12, 0, 25, 15, "black").attr("display", "none"); var gPie = g.append("g"); var gPie1 = g.append("g"); var gTxt = g.append("g"); var gDesc = g.append("g"); var midTxt1 = g.append("text").attr("x", "103").attr("y", "155").attr("font-size", 20).attr("font-weight", "bold").style("text-anchor", "middle").text("$" + d3.sum(comData.annualValue)); var gMid = g.append("g").attr("fill", "gray").attr("font-size", 14); gMid.append("text").attr("x", "103").attr("y", "180").style("text-anchor", "middle").text("Total Company"); gMid.append("text").attr("x", "103").attr("y", "195").style("text-anchor", "middle").text("Revenue"); gMid.append("text").attr("x", "103").attr("y", "210").style("text-anchor", "middle").text(""); var midTxt2 = g.append("text").attr("x", "298").attr("y", "155").attr("font-size", 20).attr("font-weight", "bold").style("text-anchor", "middle").text("$" + d3.sum(comData.annualValue1)); var gMid2 = g.append("g").attr("fill", "gray").attr("font-size", 14); gMid2.append("text").attr("x", "298").attr("y", "180").style("text-anchor", "middle").text("Total Company"); gMid2.append("text").attr("x", "298").attr("y", "195").style("text-anchor", "middle").text("Revenue"); gMid2.append("text").attr("x", "298").attr("y", "210").style("text-anchor", "middle").text(""); var gShow = g.append("g"); var gShow1 = g.append("g"); changePie(gAnnual, gQuar, gTxt, comData.annualValue, comData.annualValue1, gPie, gPie1, comData.annualText, gDesc, shadow, gShow, midTxt1, midTxt2, gMid, gMid2); gTxt.append("text").attr("font-size", 18).attr("fill", "gray").attr("font-weight", "bold").attr("x", 85).attr("y", 80).text("FY14"); gTxt.append("text").attr("font-size", 18).attr("fill", "gray").attr("x", 280).attr("y", 80).text("FY13"); createLine(g, 10, comData.height - comData.footHeight, 390, comData.height - comData.footHeight, "gray", "0.2"); var desc = gDesc.selectAll("g").data(descSet.yRect).enter().append("g"); desc.data(descSet.yRect).append("rect").attr("x", descSet.xRect).attr("y", function (d, i) { return d }).attr("width", descSet.width).attr("height", descSet.height).attr("fill", function (d, i) { return comData.color[i] }); var txtDesc = desc.data(descSet.yText).append("text").attr("x", descSet.xText).attr("y", function (d, i) { return d }).attr("font-size", 13).attr("fill", "gray"); txtDesc.data(descSet.txtData).text(function (d, i) { return d }); createText(gDesc, 25, 405, "includes $(415)M of Corporate and Other in FY14 and $403M in ", 11, "gray"); createText(gDesc, 25, 416, "FY13 not shown on graph", 11, "gray"); createRect(gShow, 0, 0, 40, 18, "black").attr("rx", 8).attr("ry", 8).attr("display", "none"); createText(gShow, 10, 13, "22%", 12, "white").attr("font-weight", "bold").attr("display", "none"); createRect(gShow1, 0, 0, 40, 18, "black").attr("rx", 8).attr("ry", 8).attr("display", "none"); createText(gShow1, 10, 13, "22%", 12, "white").attr("font-weight", "bold").attr("display", "none"); gQuar.on("click", function () { midTxt1.text("$" + d3.sum(comData.quarterlyValue)); midTxt2.text("$" + d3.sum(comData.quarterlyValue1)); changePie(gQuar, gAnnual, gTxt, comData.quarterlyValue, comData.quarterlyValue1, gPie, gPie1, comData.quarterlyText, gDesc, shadow, gShow, midTxt1, midTxt2, gMid, gMid2) }); gAnnual.on("click", function () { midTxt1.text("$" + d3.sum(comData.annualValue)); midTxt2.text("$" + d3.sum(comData.annualValue1)); changePie(gAnnual, gQuar, gTxt, comData.annualValue, comData.annualValue1, gPie, gPie1, comData.annualText, gDesc, shadow, gShow, midTxt1, midTxt2, gMid, gMid2) }); desc.on("mouseover", function () {
        var rect = d3.select(this).select("rect"); var text = d3.select(this).select("text"); var y = rect.attr("y"); var color = rect.attr("fill");
        var xTxt = text.attr("x"); var yTxt = text.attr("y"); shadow.attr("display", "block").attr("y", parseInt(y) + 2); text.attr("x", parseInt(xTxt) - 2).attr("y", parseInt(yTxt) - 2); gPie.selectAll("g").each(function () { var sumValue; if (gAnnual.select("rect").attr("fill") == "white") { sumValue = d3.sum(comData.annualValue) } else { sumValue = d3.sum(comData.quarterlyValue) } mouseoverDesc(d3.select(this), color, midTxt1, text, gMid, gShow, 103, sumValue) }); gPie1.selectAll("g").each(function () { var sumValue; if (gAnnual.select("rect").attr("fill") == "white") { sumValue = d3.sum(comData.annualValue1) } else { sumValue = d3.sum(comData.quarterlyValue1) } mouseoverDesc(d3.select(this), color, midTxt2, text, gMid2, gShow1, 298, sumValue) })
    }).on("mouseout", function () { var text = d3.select(this).select("text"); var xTxt = text.attr("x"); var yTxt = text.attr("y"); text.attr("x", parseInt(xTxt) + 2).attr("y", parseInt(yTxt) + 2); shadow.attr("display", "none"); gPie.selectAll("path").attr("transform", "scale(1)"); gPie1.selectAll("path").attr("transform", "scale(1)"); var set = ["Total Company", "Revenue", ""]; gMid.selectAll("text").data(set).text(function (d) { return d }); gMid2.selectAll("text").data(set).text(function (d) { return d }); gShow.select("rect").attr("display", "none"); gShow.select("text").attr("display", "none"); gShow1.select("rect").attr("display", "none"); gShow1.select("text").attr("display", "none"); if (gAnnual.select("rect").attr("fill") == "white") { midTxt1.text("$" + d3.sum(comData.annualValue)); midTxt2.text("$" + d3.sum(comData.annualValue1)) } else { midTxt1.text("$" + d3.sum(comData.quarterlyValue)); midTxt2.text("$" + d3.sum(comData.quarterlyValue1)) } })
} function mouseoverDesc(tar, color, midTxt1, text, gMid, gShow, xPie, sumValue) { if (tar.select("path").attr("fill") === color) { tar.select("path").attr("transform", "scale(1.05)"); var value = tar.select("text").text(); midTxt1.text("$" + value); var set = ["", "", ""]; var strText = text.text().split(" "); var length = strText.length; for (var i = 0; i < 3; i++) { if (strText[0].length + strText[1].length > 13) { if (i < length) { set[i] = strText[i] } } else { if (i == 0) { set[0] = strText[0] + " " + strText[1] } else { if (i < length - 1) { set[i] = strText[i + 1] } } } } gMid.selectAll("text").data(set).text(function (d) { return d }); var translate = tar.select("text").attr("transform"); translate = translate.replace("translate(", "").replace(")", ""); var arr = translate.split(/[ |,]/); var x = xPie + parseInt(arr[0]); var y = 175 + parseFloat(arr[1]); gShow.select("rect").attr("x", x).attr("y", y).attr("display", "block"); gShow.select("text").attr("x", parseFloat(x) + 10).attr("y", parseFloat(y) + 13).attr("display", "block").text((parseFloat(value) / parseFloat(sumValue) * 100).toFixed(0) + "%") } } function changePie(gTar, gOld, gTxt, set1, set2, gPie, gPie1, txt, gDesc, shadow, gshow, midTxt1, midTxt2, gMid1, gMid2) {
    gTar.select("rect").attr("fill", "white").attr("stroke", "white"); gTar.select("text").attr("fill", "gray"); gOld.select("rect").attr("fill", "gray").attr("stroke", "gray"); gOld.select("text").attr("fill", "white"); gTxt.selectAll("text").data(txt).text(function (d, i) { return d }); gPie.selectAll("g").remove(); gPie1.selectAll("g").remove(); var pie = d3.layout.pie().sort(null); var outerRadius = comData.width / 5; var innerRadius = comData.width / 8; var arc = d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius); var arcs1 = gPie.selectAll("g").data(pie(set1)).enter().append("g").attr("class", "arcs").attr("transform", "translate(103,175)"); var arcs2 = gPie1.selectAll("g").data(pie(set2)).enter().append("g").attr("class", "arcs").attr("transform", "translate(298,175)"); arcs1.append("path").attr("fill", function (d, i) { return comData.color[i] }).attr("stroke", "#fff").attr("stroke-width", 13).attr("d", function (d) { arc.outerRadius(outerRadius + 15); arc.innerRadius(innerRadius + 6); return arc(d) }).transition().duration(1000).attr("d", function (d) { arc.outerRadius(outerRadius); arc.innerRadius(innerRadius); return arc(d) }).attr("stroke-width", 5); arcs1.append("text").attr("transform", function (d) { return "translate(" + arc.centroid(d) + ")" }).attr("text-anchor", "middle").text(function (d) { return d.value }).attr("font-size", 12).attr("font-weight", "bold").attr("fill", "white").attr("display", "none"); arcs2.append("path").attr("fill", function (d, i) { return comData.color[i] }).attr("stroke", "#fff").attr("stroke-width", 13).attr("d", function (d) { arc.outerRadius(outerRadius + 15); arc.innerRadius(innerRadius + 6); return arc(d) }).transition().duration(1000).attr("d", function (d) { arc.outerRadius(outerRadius); arc.innerRadius(innerRadius); return arc(d) }).attr("stroke-width", 5); arcs2.append("text").attr("transform", function (d) { return "translate(" + arc.centroid(d) + ")" }).attr("text-anchor", "middle").text(function (d) { return d.value }).attr("font-size", 12).attr("font-weight", "bold").attr("fill", "white").attr("display", "none"); arcs1.on("mouseover", function (e) { mouseoverArc(d3.select(this), gDesc, shadow, midTxt1, gMid1) }).on("mouseout", function () { var sumValue = 0; arcs1.selectAll("text").each(function () { sumValue = sumValue + parseFloat(d3.select(this).text()) }); midTxt1.text("$" + sumValue); mouseoutArc(d3.select(this), gDesc, shadow, gshow, gMid1) }); arcs2.on("mouseover", function () {
        mouseoverArc(d3.select(this), gDesc, shadow, midTxt2, gMid2)
    }).on("mouseout", function () { var sumValue = 0; arcs2.selectAll("text").each(function () { sumValue = sumValue + parseFloat(d3.select(this).text()) }); midTxt2.text("$" + sumValue); mouseoutArc(d3.select(this), gDesc, shadow, gshow, gMid2) }); $(".arcs").each(function () { $(this).mousemove(function (e) { var sumValue = 0; $(this).parent().find("text").each(function () { sumValue = sumValue + parseFloat($(this).text()) }); var value = $(this).find("text").text(); var x = parseInt(e.pageX) - 25; var y = parseInt(e.pageY) - 55; gshow.select("rect").attr("x", x).attr("y", y).attr("display", "block"); gshow.select("text").attr("x", parseInt(x) + 10).attr("y", parseInt(y) + 13).attr("display", "block").text((parseFloat(value) / parseFloat(sumValue) * 100).toFixed(0) + "%") }) })
} function mouseoverArc(arc, gDesc, shadow, midTxt, gMid) { var tarcolor = arc.select("path").attr("fill"); arc.select("path").attr("transform", "scale(1.05)"); midTxt.text("$" + arc.select("text").text()); gDesc.selectAll("g").each(function () { var rect = d3.select(this).select("rect"); var text = d3.select(this).select("text"); if (rect.attr("fill") === tarcolor) { var y = rect.attr("y"); var xTxt = text.attr("x"); var yTxt = text.attr("y"); shadow.attr("display", "block").attr("y", parseInt(y) + 2); text.attr("x", parseInt(xTxt) - 2).attr("y", parseInt(yTxt) - 2); var set = ["", "", ""]; var strText = text.text().split(" "); var length = strText.length; for (var i = 0; i < 3; i++) { if (strText[0].length + strText[1].length > 13) { if (i < length) { set[i] = strText[i] } } else { if (i == 0) { set[0] = strText[0] + " " + strText[1] } else { if (i < length - 1) { set[i] = strText[i + 1] } } } } gMid.selectAll("text").data(set).text(function (d) { return d }) } }) } function mouseoutArc(arc, gDesc, shadow, gshow, gMid) { var tarcolor = arc.select("path").attr("fill"); arc.select("path").attr("transform", "scale(1)"); gDesc.selectAll("g").each(function () { var rect = d3.select(this).select("rect"); var text = d3.select(this).select("text"); if (rect.attr("fill") === tarcolor) { var xTxt = text.attr("x"); var yTxt = text.attr("y"); text.attr("x", parseInt(xTxt) + 2).attr("y", parseInt(yTxt) + 2); shadow.attr("display", "none") } }); var set = ["Total Company", "Revenue", ""]; gMid.selectAll("text").data(set).text(function (d) { return d }); gshow.select("rect").attr("display", "none"); gshow.select("text").attr("display", "none") } function createRect(g, x, y, width, height, fill) { var rect = g.append("rect").attr("x", x).attr("y", y).attr("width", width).attr("height", height).attr("fill", fill); return rect } function createLine(g, x1, y1, x2, y2, stroke, strokeWidth) { var line = g.append("line").attr("x1", x1).attr("y1", y1).attr("x2", x2).attr("y2", y2).attr("stroke", stroke).attr("stroke-width", strokeWidth); return line } function createText(g, x, y, text, size, fill) { var text = g.append("text").attr("x", x).attr("y", y).attr("font-size", size).attr("fill", fill).text(text); return text } function createCircle(g, cx, cy, r, fill, stroke, strokeWidth) { var circle = g.append("circle").attr("cx", cx).attr("cy", cy).attr("r", r).attr("fill", fill).attr("stroke", stroke).attr("stroke-width", strokeWidth); return circle } function changeBar(yLine, barSet, yScale, gContent, g) { var bar = gContent.append("g").attr("id", "bar"); var gBars = bar.selectAll("g").data(yLine.data()).enter().append("g"); var barRect = gBars.data(yLine.data()).append("rect").attr("x", function (d, i) { return d + yLine.xText }).attr("y", d3.max(xLine().data())).attr("width", 35).attr("fill", "#00b193").attr("height", 0); barRect.data(barSet).transition().duration(1000).attr("y", function (d, i) { return d3.max(xLine().data()) - yScale(d) }).attr("height", yScale); var barText = gBars.data(yLine.data()).append("text").attr("x", function (d, i) { return d + yLine.xText }).attr("y", 0).attr("fill", "gray").attr("class", "txtbar"); barText.data(barSet).attr("y", function (d, i) { return d3.max(xLine().data()) - 4 - yScale(d) }).attr("display", "none").transition().duration(500).delay(1000).attr("display", "block").text(function (d, i) { return "$" + d.toFixed(1) }); var showRect = createRect(g, 0, 0, 45, 20, "black").attr("display", "none").attr("rx", 10).attr("ry", 10); var showText = createText(g, 5, 13, "", 12, "white").attr("font-weight", "bold").attr("display", "none"); gBars.on("mouseover", function () { barMouseover(d3.select(this), showRect, showText) }).on("mouseout", function () { barMouseout(d3.select(this), showRect, showText) }); return bar } function createChartTitle(g) {
    createRect(g, 0, 0, comData.width, comData.height, "white"); g.on("mouseover", function () { d3.select(this).transition().duration(300).ease("linear").attr("transform", "scale(" + comData.scale + ")") }).on("mouseout", function () { d3.select(this).transition().duration(100).attr("transform", "scale(0.5)") }); createRect(g, 0, 0, comData.width, comData.titleHeight, "#f0f0f0"); var fixed = g.append("g").attr("fill", "#b5b5b5"); createCircle(fixed, comData.width - 16, 14, 12, "none", "#b5b5b5", 1); fixed.append("path").attr("transform", "translate(365,-6) scale(0.2)").attr("d", "M59 137 L70 120   L46 96 L50 92 L80 100   L105 75 L100 60 L104 56   L144 96 L140 100 L125 95   L100 120 L108 150 L104 154   L80 130 L63 141 Z"); if (comData.subTitle.length > 15) {
        createText(g, 10, 15, comData.title, 14, "black").attr("font-weight", "bold"); createText(g, 10, 27, comData.subTitle, 12, "gray")
    } else { createText(g, 10, 20, comData.title, 14, "black").attr("font-weight", "bold"); createText(g, 10 + parseFloat(parseInt(comData.title.length) * 9), 20, comData.subTitle, 12, "gray") } fixed.on("click", function () { if (d3.select(this).attr("fill") == "#b5b5b5") { g.on("mouseover", function () { }).on("mouseout", function () { }); d3.select(this).attr("fill", "#7a7a7a") } else { g.on("mouseover", function () { d3.select(this).transition().duration(300).ease("linear").attr("transform", "scale(" + comData.scale + ")") }).on("mouseout", function () { d3.select(this).transition().duration(100).attr("transform", "scale(0.5)") }); d3.select(this).attr("fill", "#b5b5b5") } }); createRect(g, 0, comData.titleHeight, comData.width, comData.barHeight, "#7e7e7e").attr("stroke", "#7e7e7e"); var gQuar = g.append("g"); createRect(gQuar, 0, comData.titleHeight, comData.barWidth, comData.barHeight, "#7e7e7e").attr("stroke", "#7e7e7e"); createText(gQuar, 24, comData.titleHeight + comData.barHeight - 6, comData.bar1Label, 13, "#ffffff"); var gAnnual = g.append("g"); createRect(gAnnual, comData.barWidth, comData.titleHeight, comData.barWidth, comData.barHeight, "#ffffff").attr("stroke", "#ffffff"); createText(gAnnual, comData.barWidth + 40, comData.titleHeight + comData.barHeight - 6, comData.bar2Label, 13, "#7e7e7e"); return [gQuar, gAnnual]
} function createChartXLine(g) { createRect(g, 0, comData.titleHeight + comData.barHeight, comData.width, comData.height - comData.titleHeight - comData.barHeight, "white"); g.selectAll("line").data(xLine().data()).enter().append("line").attr("x1", xLine().x1).attr("x2", xLine().x2).attr("y1", function (d, i) { return d }).attr("y2", function (d, i) { return d }).attr("stroke", "gray").attr("stroke-width", 0.2); var gTxtAxis = g.append("g").attr("font-size", 13).attr("fill", "gray").attr("font-weight", "bold"); gTxtAxis.selectAll("text").data(xLine().data()).enter().append("text").attr("x", xLine().x1).attr("y", function (d, i) { return d - xLine().yText }); gTxtAxis.selectAll("text").data(comData.annualScale).text(function (d, i) { return "$" + d }); return gTxtAxis } function changeBarCommon(gTar, gOld, txt, yLine, xText, gTxtAxis, gContent, fontsize, ytxt, lineCount) { fontsize = (fontsize == null) ? 13 : fontsize; ytxt = (ytxt == null) ? 275 : ytxt; var padding = (ytxt == null) ? 3 : 1; lineCount = (lineCount == null) ? 2 : lineCount; gTar.select("rect").attr("fill", "white").attr("stroke", "white"); gTar.select("text").attr("fill", "gray"); gOld.select("rect").attr("fill", "gray").attr("stroke", "gray"); gOld.select("text").attr("fill", "white"); gTxtAxis.selectAll("text").data(txt).text(function (d, i) { return "$" + d }); gContent.selectAll("line").remove(); gContent.selectAll("text").remove(); gContent.selectAll("g").remove(); if (lineCount == 2) { gContent.append("line").attr("stroke", "gray").attr("stroke-width", 0.2).attr("y1", yLine.y1).attr("y2", yLine.y2).attr("x1", d3.max(yLine.data())).attr("x2", d3.max(yLine.data())); gContent.append("line").attr("stroke", "gray").attr("stroke-width", 0.2).attr("y1", yLine.y1).attr("y2", yLine.y2).attr("x1", d3.max(yLine.data()) + yLine.xStep()).attr("x2", d3.max(yLine.data()) + yLine.xStep()) } else { gContent.selectAll("line").data(yLine.data()).enter().append("line").attr("stroke", "gray").attr("stroke-width", 0.2).attr("y1", yLine.y1).attr("y2", yLine.y2).attr("x1", function (d) { return d + yLine.xStep() }).attr("x2", function (d) { return d + yLine.xStep() }) } var gYText = gContent.append("g").attr("font-size", fontsize); gYText.selectAll("text").data(yLine.data()).enter().append("text").attr("y", ytxt).attr("x", function (d, i) { return d + parseInt(yLine.xText) + padding }); gYText.selectAll("text").data(xText).text(function (d, i) { return d }) } function barMouseover(gBars, showRect, showText) { var size = gBars.selectAll("rect").size(); if (size != 0) { var tarRect = gBars.select("rect"); var tarText = gBars.select("text"); var x = tarRect.attr("x"); var y = tarRect.attr("y"); if (tarRect.attr("fill") == "#00b193") { tarRect.attr("fill", "#008e76") } else { if (tarRect.attr("fill") == "#0072c5") { tarRect.attr("fill", "#005B9E") } } var txt = tarText.text(); tarText.attr("display", "none"); showRect.attr("display", "block").attr("x", x - 5).attr("y", y - 22); showText.attr("display", "block").attr("x", x).attr("y", y - 8).text(txt) } } function barMouseout(gBars, showRect, showText) { var size = gBars.selectAll("rect").size(); if (size != 0) { var tarRect = gBars.select("rect"); if (tarRect.attr("fill") == "#008e76") { tarRect.attr("fill", "#00b193") } else { if (tarRect.attr("fill") == "#005b9e") { tarRect.attr("fill", "#0072C5") } } gBars.select("text").attr("display", "block"); showRect.attr("display", "none"); showText.attr("display", "none") } };